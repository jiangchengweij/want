@use 'sass:math';
@import '../common/style/var';

.wan-loading {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: var(--loading-spinner-color, $loading-spinner-color);

  &__spinner {
    position: relative;
    box-sizing: border-box;
    width: var(--loading-spinner-size, $loading-spinner-size);

    // compatible for 0.x, users may set width or height in root element
    max-width: 100%;
    height: var(--loading-spinner-size, $loading-spinner-size);
    max-height: 100%;
    animation-name: wan-rotate;
    animation-duration: var(
      --loading-spinner-animation-duration,
      $loading-spinner-animation-duration
    );
    animation-timing-function: linear;
    animation-iteration-count: infinite;

    &--spinner {
      animation-timing-function: steps(12);
    }

    &--circular {
      border: 1px solid transparent;
      border-top-color: var(--loading-spinner-color, $loading-spinner-color);
      border-radius: 100%;
    }
  }

  &__text {
    margin-left: var(--padding-xs, $padding-xs);
    font-size: var(--loading-text-font-size, $loading-text-font-size);
    line-height: var(--loading-text-line-height, $loading-text-line-height);
    color: var(--loading-text-color, $loading-text-color);

    &:empty {
      display: none;
    }
  }

  &--vertical {
    flex-direction: column;

    .wan-loading__text {
      margin: var(--padding-xs, $padding-xs) 0 0;
    }
  }

  &__dot {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    &::before {
      display: block;
      width: 2px;
      height: 25%;
      margin: 0 auto;
      content: ' ';
      background-color: currentcolor;
      border-radius: 40%;
    }
  }
}

@mixin generate($num) {
  @for $i from 1 through $num {
    .wan-loading__dot--#{$i} {
      opacity: 1 - math.div(0.75, 12) * ($i - 1);
      transform: rotate($i * 30deg);
    }
  }
}

@include generate(12);

@keyframes wan-rotate {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}
